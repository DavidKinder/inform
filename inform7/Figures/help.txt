inform7: a compiler from source text to Inter code

Usage: inform7 [OPTIONS]

for translating Inform source text to Inter:
  -basic                   use Basic Inform language
  -case X                  make any source links refer to the source in extension example X
  -census                  perform an extensions census (default is -no-census)
  -debug                   compile with debugging features even on a Release (default is -no-debug)
  -format=X                compile to the format X (default is Inform6/32)
  -o X                     use file X as the compiled output (not for use with -project)
  -project X               work within the Inform project X
  -release                 compile a version suitable for a Release build (default is -no-release)
  -rng                     fix the random number generator of the story file (for testing) (default is -no-rng)
  -source X                use file X as the Inform source text

for locating resources in the file system:
  -deprecated-external X   same as -external X, but issues warnings if the nest is actually used
  -external X              use X as the user's home for installed material such as extensions
  -internal X              use X as the location of built-in material such as the Standard Rules
  -nest X                  add the nest at pathname X to the search list
  -transient X             use X for transient data such as the extensions census

for tweaking code generation from Inter:
  -kit X                   include Inter code from the kit called X
  -pipeline X              specify code-generation pipeline by name (default is "compile")
  -pipeline-file X         specify code-generation pipeline as file X
  -variable X              set pipeline variable X (in form name=value)

for testing and debugging inform7:
  -no-census-update        don't update the extensions census (default is -census-update)
  -crash-all               intentionally crash on Problem messages, for backtracing (default is -no-crash-all)
  -diagnostics X           if no problems occur, write diagnostics files to directory X (default is -no-diagnostics)
  -inbuild-verbose         equivalent to -inbuild-verbosity=1 (default is -no-inbuild-verbose)
  -inbuild-verbosity=N     how much inbuild should explain: lowest is 0 (default), highest is 3
  -no-index                don't produce an Index (default is -index)
  -no-problems             don't produce (an HTML) Problems report page (default is -problems)
  -no-progress             don't display progress percentages (default is -progress)
  -require-problem X       return 0 unless exactly this Problem message is generated
  -no-resource-checking    don't check that figures, sounds and similar resources exist at compile-time (default is -resource-checking)
  -sigils                  print Problem message sigils (default is -no-sigils)
  -silence                 practice 'silence is golden': print only Unix-style errors (default is -no-silence)
  -test-output X           write output of internal tests to file X

-at X                      specify that this tool is installed at X
-crash                     intentionally crash on internal errors, for backtracing (default is -no-crash)
-fixtime                   pretend the time is 11 a.m. on 28 March 2016 for testing (default is -no-fixtime)
-help                      print this help information
-locale X                  set locales as 'L=E', L being shell or console, E platform, utf-8 or iso-latin1
-log X                     write the debugging log to include diagnostics on X
-version                   print out version number
